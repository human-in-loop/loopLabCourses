import { useEffect, useState } from "react";
import { Link, useLocation } from "wouter";
import { useQuery } from "@tanstack/react-query";
import { motion } from "framer-motion";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";

interface DashboardStats {
  totalCourses: number;
  totalUsers: number;
  totalRevenue: number;
  pendingVerifications: number;
  totalBlogPosts: number; // Add this
  publishedPosts: number;  // Add this
  draftPosts: number;      // Add this
  recentUsers: Array<{
    id: string;
    name: string;
    email: string;
    createdAt: string;
  }>;
  recentCourses: Array<{
    id: string;
    title: string;
    category: string;
    isPremium: boolean;
    createdAt: string;
  }>;
  recentPosts: Array<{    // Add this
    id: string;
    title: string;
    status: string;
    createdAt: string;
  }>;
}

export default function AdminDashboard() {
  const [, setLocation] = useLocation();

  // Fetch dashboard stats
  const { data: stats, isLoading, error } = useQuery<DashboardStats>({
    queryKey: ["/api/admin/dashboard/stats"],
    queryFn: async () => {
      const response = await fetch("/api/admin/dashboard/stats", {
        credentials: "include",
      });
      if (!response.ok) throw new Error("Failed to fetch dashboard stats");
      return response.json();
    },
  });

  useEffect(() => {
    // Add this debug log to confirm the page loads
    console.log("âœ… AdminDashboard component mounted");
    document.title = "Admin Dashboard | Loop Lab";
  }, []);

  // Show loading while checking user
  if (isLoading) {
    return (
      <div className="min-h-screen pt-20 px-4 bg-loop-dark text-white">
        <div className="max-w-7xl mx-auto">
          <div className="animate-pulse space-y-6">
            <div className="h-8 bg-gray-700 rounded w-64"></div>
            <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
              {[...Array(4)].map((_, i) => (
                <div key={i} className="h-32 bg-gray-700 rounded"></div>
              ))}
            </div>
          </div>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen pt-20 px-4 bg-loop-dark text-white">
        <div className="max-w-7xl mx-auto">
          <div className="text-center">
            <h1 className="text-2xl font-bold text-red-400 mb-4">Error Loading Dashboard</h1>
            <p className="text-gray-400">Failed to load dashboard data. Please try again.</p>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen pt-20 px-4 bg-loop-dark text-white">
      <div className="max-w-7xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
        >
          {/* Header */}
          <div className="mb-8">
            <h1 className="text-4xl font-bold gradient-text">Admin Dashboard</h1>
            <p className="text-gray-400 mt-2">Overview of your platform performance</p>
          </div>

          {/* Stats Cards */}
          <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
            <Card className="bg-gradient-to-br from-blue-500/20 to-blue-600/20 border-blue-500/30">
              <CardContent className="p-6">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-blue-300 text-sm font-medium">Total Courses</p>
                    <p className="text-3xl font-bold text-white">{stats?.totalCourses || 0}</p>
                  </div>
                  <div className="bg-blue-500/20 p-3 rounded-full">
                    <i className="fas fa-book text-blue-400 text-xl"></i>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card className="bg-gradient-to-br from-green-500/20 to-green-600/20 border-green-500/30">
              <CardContent className="p-6">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-green-300 text-sm font-medium">Total Users</p>
                    <p className="text-3xl font-bold text-white">{stats?.totalUsers || 0}</p>
                  </div>
                  <div className="bg-green-500/20 p-3 rounded-full">
                    <i className="fas fa-users text-green-400 text-xl"></i>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card className="bg-gradient-to-br from-purple-500/20 to-purple-600/20 border-purple-500/30">
              <CardContent className="p-6">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-purple-300 text-sm font-medium">Total Revenue</p>
                    <p className="text-3xl font-bold text-white">${stats?.totalRevenue || 0}</p>
                  </div>
                  <div className="bg-purple-500/20 p-3 rounded-full">
                    <i className="fas fa-dollar-sign text-purple-400 text-xl"></i>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card className="bg-gradient-to-br from-orange-500/20 to-orange-600/20 border-orange-500/30">
              <CardContent className="p-6">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-orange-300 text-sm font-medium">Pending Verifications</p>
                    <p className="text-3xl font-bold text-white">{stats?.pendingVerifications || 0}</p>
                  </div>
                  <div className="bg-orange-500/20 p-3 rounded-full">
                    <i className="fas fa-clock text-orange-400 text-xl"></i>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Quick Actions */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
            <Card className="bg-gray-800/50 border-gray-700">
              <CardHeader>
                <CardTitle className="text-xl text-white flex items-center">
                  <i className="fas fa-plus-circle mr-3 text-loop-purple"></i>
                  Quick Actions
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                <Link href="/admin/courses/new">
                  <Button className="w-full bg-loop-purple hover:bg-loop-purple/80 justify-start">
                    <i className="fas fa-plus mr-2"></i>
                    Create New Course
                  </Button>
                </Link>
                <Link href="/admin/users">
                  <Button variant="outline" className="w-full border-gray-600 text-gray-300 hover:bg-gray-700 justify-start">
                    <i className="fas fa-users mr-2"></i>
                    Manage Users
                  </Button>
                </Link>
                <Link href="/admin/settings">
                  <Button variant="outline" className="w-full border-gray-600 text-gray-300 hover:bg-gray-700 justify-start">
                    <i className="fas fa-cog mr-2"></i>
                    Platform Settings
                  </Button>
                </Link>
              </CardContent>
            </Card>

            {/* Recent Users */}
            <Card className="bg-gray-800/50 border-gray-700">
              <CardHeader>
                <CardTitle className="text-xl text-white flex items-center justify-between">
                  <span>Recent Users</span>
                  <Link href="/admin/users">
                    <Button size="sm" variant="outline" className="border-gray-600 text-gray-300">
                      View All
                    </Button>
                  </Link>
                </CardTitle>
              </CardHeader>
              <CardContent>
                {stats?.recentUsers?.length ? (
                  <div className="space-y-3">
                    {stats.recentUsers.slice(0, 3).map((user) => (
                      <div key={user.id} className="flex items-center justify-between p-2 bg-gray-700/50 rounded">
                        <div>
                          <p className="font-medium text-white">{user.name}</p>
                          <p className="text-sm text-gray-400">{user.email}</p>
                        </div>
                        <Badge variant="outline" className="text-xs">
                          {new Date(user.createdAt).toLocaleDateString()}
                        </Badge>
                      </div>
                    ))}
                  </div>
                ) : (
                  <p className="text-gray-400 text-sm">No recent users</p>
                )}
              </CardContent>
            </Card>

            {/* Recent Courses */}
            <Card className="bg-gray-800/50 border-gray-700">
              <CardHeader>
                <CardTitle className="text-xl text-white flex items-center justify-between">
                  <span>Recent Courses</span>
                  <Link href="/admin/courses">
                    <Button size="sm" variant="outline" className="border-gray-600 text-gray-300">
                      View All
                    </Button>
                  </Link>
                </CardTitle>
              </CardHeader>
              <CardContent>
                {stats?.recentCourses?.length ? (
                  <div className="space-y-3">
                    {stats.recentCourses.slice(0, 3).map((course) => (
                      <div key={course.id} className="p-2 bg-gray-700/50 rounded">
                        <div className="flex items-center justify-between mb-1">
                          <p className="font-medium text-white truncate">{course.title}</p>
                          {course.isPremium && (
                            <Badge className="bg-yellow-500/20 text-yellow-400 text-xs">Premium</Badge>
                          )}
                        </div>
                        <div className="flex items-center justify-between">
                          <p className="text-sm text-gray-400">{course.category}</p>
                          <p className="text-xs text-gray-500">
                            {new Date(course.createdAt).toLocaleDateString()}
                          </p>
                        </div>
                      </div>
                    ))}
                  </div>
                ) : (
                  <p className="text-gray-400 text-sm">No recent courses</p>
                )}
              </CardContent>
            </Card>
          </div>

          {/* Blog Overview */}
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
            <Card className="bg-gray-800/50 border-gray-700 lg:col-span-2">
              <CardHeader className="flex flex-row items-center justify-between">
                <CardTitle className="flex items-center">
                  <i className="fas fa-pen-fancy text-purple-400 mr-3"></i>
                  Recent Blog Posts
                </CardTitle>
                <Link href="/admin/blog">
                  <Button variant="outline" size="sm" className="border-gray-600 text-gray-300">
                    Manage Posts
                  </Button>
                </Link>
              </CardHeader>
              <CardContent>
                {stats?.recentPosts?.length ? (
                  <div className="space-y-3">
                    {stats.recentPosts.slice(0, 5).map((post) => (
                      <div key={post.id} className="flex items-center justify-between p-3 bg-gray-700/30 rounded-lg">
                        <div>
                          <h4 className="font-medium text-white">{post.title}</h4>
                          <p className="text-sm text-gray-400">
                            {new Date(post.createdAt).toLocaleDateString()}
                          </p>
                        </div>
                        <Badge
                          className={
                            post.status === "published"
                              ? "bg-green-500/20 text-green-400"
                              : "bg-yellow-500/20 text-yellow-400"
                          }
                        >
                          {post.status}
                        </Badge>
                      </div>
                    ))}
                  </div>
                ) : (
                  <div className="text-center py-8">
                    <div className="bg-purple-500/20 p-4 rounded-full mx-auto mb-4 w-fit">
                      <i className="fas fa-pen-fancy text-purple-400 text-xl"></i>
                    </div>
                    <p className="text-gray-400 mb-4">No blog posts yet</p>
                    <Link href="/admin/blog">
                      <Button className="bg-purple-500 hover:bg-purple-600">
                        Create First Post
                      </Button>
                    </Link>
                  </div>
                )}
              </CardContent>
            </Card>

            {/* Blog Stats Sidebar */}
            <div className="space-y-4">
              <Card className="bg-gray-800/50 border-gray-700">
                <CardHeader>
                  <CardTitle className="text-lg">Blog Stats</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="flex justify-between">
                    <span className="text-gray-400">Published:</span>
                    <span className="text-green-400 font-semibold">{stats?.publishedPosts || 0}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-400">Drafts:</span>
                    <span className="text-yellow-400 font-semibold">{stats?.draftPosts || 0}</span>
                  </div>
                  <div className="flex justify-between border-t border-gray-700 pt-2">
                    <span className="text-gray-300 font-medium">Total:</span>
                    <span className="text-white font-semibold">{stats?.totalBlogPosts || 0}</span>
                  </div>
                </CardContent>
              </Card>

              <Card className="bg-gray-800/50 border-gray-700">
                <CardContent className="p-4">
                  <Link href="/admin/blog">
                    <Button className="w-full bg-purple-500 hover:bg-purple-600">
                      <i className="fas fa-cog mr-2"></i>
                      Manage Blog
                    </Button>
                  </Link>
                </CardContent>
              </Card>
            </div>
          </div>

          {/* Navigation Cards */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            <Link href="/admin/courses">
              <Card className="bg-gray-800/50 border-gray-700 hover:border-loop-purple/50 transition-colors cursor-pointer">
                <CardContent className="p-6 text-center">
                  <div className="bg-blue-500/20 p-4 rounded-full mx-auto mb-4 w-fit">
                    <i className="fas fa-book text-blue-400 text-2xl"></i>
                  </div>
                  <h3 className="text-lg font-semibold text-white mb-2">Course Management</h3>
                  <p className="text-gray-400 text-sm">Manage all courses, modules, and lessons</p>
                </CardContent>
              </Card>
            </Link>

            <Link href="/admin/users">
              <Card className="bg-gray-800/50 border-gray-700 hover:border-loop-purple/50 transition-colors cursor-pointer">
                <CardContent className="p-6 text-center">
                  <div className="bg-green-500/20 p-4 rounded-full mx-auto mb-4 w-fit">
                    <i className="fas fa-users text-green-400 text-2xl"></i>
                  </div>
                  <h3 className="text-lg font-semibold text-white mb-2">User Management</h3>
                  <p className="text-gray-400 text-sm">Manage users, verifications, and permissions</p>
                </CardContent>
              </Card>
            </Link>

            <Link href="/admin/settings">
              <Card className="bg-gray-800/50 border-gray-700 hover:border-loop-purple/50 transition-colors cursor-pointer">
                <CardContent className="p-6 text-center">
                  <div className="bg-purple-500/20 p-4 rounded-full mx-auto mb-4 w-fit">
                    <i className="fas fa-cog text-purple-400 text-2xl"></i>
                  </div>
                  <h3 className="text-lg font-semibold text-white mb-2">Settings</h3>
                  <p className="text-gray-400 text-sm">Platform settings and configuration</p>
                </CardContent>
              </Card>
            </Link>

            <Link href="/admin/reports">
              <Card className="bg-gray-800/50 border-gray-700 hover:border-loop-purple/50 transition-colors cursor-pointer">
                <CardContent className="p-6 text-center">
                  <div className="bg-orange-500/20 p-4 rounded-full mx-auto mb-4 w-fit">
                    <i className="fas fa-chart-bar text-orange-400 text-2xl"></i>
                  </div>
                  <h3 className="text-lg font-semibold text-white mb-2">Reports</h3>
                  <p className="text-gray-400 text-sm">Analytics and performance reports</p>
                </CardContent>
              </Card>
            </Link>
          </div>
        </motion.div>
      </div>
    </div>
  );
}
